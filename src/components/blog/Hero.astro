---
import { Image } from "astro:assets";
import { getFormattedDate } from "@/utils";
import type { CollectionEntry } from "astro:content";

interface Props {
  content: CollectionEntry<"post">;
}

const {
  content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();
const datetime = data.publishDate.toISOString();
const postDate = getFormattedDate(data.publishDate, { month: "long" });
---

{
  data.coverImage && (
    <div class="aspect-h-9 aspect-w-16 mb-6">
      <Image
        src={data.coverImage.src}
        alt={data.coverImage.alt}
        class="object-cover"
        loading="eager"
        fetchpriority="high"
      />
    </div>
  )
}
<h1 class="p-name entry-title title mb-3">{data.title}</h1>
<p class="text-gray-500 dark:text-gray-400 mb-2">
  <span class="sr-only"
    >Published by <a class="p-author h-card" href="http://jacklorusso.com"
      >Jack Lo Russo</a
    >
     on
  </span>
  <time class="dt-published" datetime={datetime}>{postDate}</time>{" / "}
  {remarkPluginFrontmatter.minutesRead}
</p>
<p>
  {
    !!data.tags?.length && (
      <div class="text-gray-500 dark:text-gray-400 ">
        {data.tags.map((tag) => (
          <>
            <a
              rel="category tag"
              class="p-category inline-block underline before:content-['#']"
              aria-label={`View more blogs with the tag ${tag}`}
              href={`/tags/${tag}/`}
              data-pagefind-filter="tag"
            >
              {tag}
            </a>
            &nbsp;
          </>
        ))}
      </div>
    )
  }
</p>
